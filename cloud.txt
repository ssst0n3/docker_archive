#cloud-config
user: root
password: root
chpasswd: {expire: False}
ssh_pwauth: True
write_files:
- content: |
    #!/bin/bash
    set -x
    build_namespace_arg() {
        namespace=$1
        if [ -z "$namespace" ]
        then 
      echo "--all-namespaces"
        else
            echo "-n $namespace"
        fi
    }

    make_sure_pods_exists() {
        ns_arg=$*
        while true
        do
            sleep 5
      result=$(kubectl get pods $ns_arg)
            if [ $? == 0 ] && [ $(echo "$result" | wc -l) != 0 ]; then break; fi
        done
    }

    make_sure_all_pods_ready() {
        ns_arg=$*
        while true
        do
            sleep 5
            result=$(kubectl get pods $ns_arg -o jsonpath='{range .items[*].status.containerStatuses[*]}{.ready}{"\n"}{end}')
            if [ $? == 0 ] && [ $(echo "$result" | grep -v true | wc -l) = 0 ]; then break; fi
        done
    }

    arg=$(build_namespace_arg $1)
    make_sure_pods_exists $arg
    make_sure_all_pods_ready $arg
  path: /wait-for.sh
  permissions: '0755'
- content: |
    #!/bin/bash
    set -ex
    export HOME=/root
    curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.16.0 TARGET_ARCH=x86_64 sh -
    cd istio-*
    export PATH=$PWD/bin:$PATH
    systemctl start containerd
    systemctl start kubelet
    /wait-for.sh
    kubectl taint nodes --all node-role.kubernetes.io/master-
    istioctl x precheck
    istioctl install --verify --set profile=demo -y
    kubectl label namespace default istio-injection=enabled
    /wait-for.sh
  path: /init.sh
  permissions: '0755'
runcmd:
  - /init.sh
cloud_init_modules:
  - [ write-files, always ]
cloud_config_modules:
  - [ runcmd, always ]
  - [ set-passwords, always ]
cloud_final_modules:
  - [ scripts-user, always ]
  - [ final-message, always ]